#For this project, I downloaded Spotify data from Kaggle. Then I created a table to insert Spotify data into. 
#Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify data .csv into the table. 

#Next, I explored the data using SQL. 

#First things first, I wanted to see what the table may look like. 
SELECT * 
FROM BIT_DB.Spotifydata;

#I wanted to know which artists and their songs had the highest energy. I wanted to know the top 20. 
SELECT artist_name, track_name, energy
FROM BIT_DB.Spotifydata 
WHERE energy > 0.5
ORDER BY energy desc
LIMIT 20 ;

#I also wanted to determine which artist and their song had the highest danceability.
SELECT track_name, MAX(danceability), artist_name 
FROM BIT_DB.Spotifydata; 

#Then I wanted to figure out which artist and their song had the lowest danceability.
SELECT track_name, MIN(danceability), artist_name 
FROM BIT_DB.Spotifydata;

#I wanted to determine the top 10 popular artists and their most popular songs. 
SELECT distinct artist_name, track_name
FROM BIT_DB.Spotifydata 
WHERE popularity > 0.6
ORDER BY popularity desc
LIMIT 10;
